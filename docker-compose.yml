services:

  mongo:
    image: mongo
    container_name: mongo-mern
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    networks:
      - mern-network
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: node-app
    ports:
      - 5000:5000
    environment:
      - MONGO_URI=${MONGO_URI}
    depends_on:
      - mongo
    networks:
      - mern-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on:
      - backend
    container_name: web-app
    networks:
      - mern-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis
    volumes:
      - redis-data:/usr/local/etc/redis
    ports:
      - 6379:6379
    container_name: redis-mernstack
    networks:
      - mern-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq-mernstack
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mern-network
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo-data:
  redis-data:


networks:
  mern-network:
    driver: bridge
